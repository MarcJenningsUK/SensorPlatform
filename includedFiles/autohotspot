#!/bin/bash


#!/bin/bash
#
# Interface checker
# Checks to see whether interface has an IP address, if it doesn't assume it's down and start hostapd
# Author : SirLagz
#
Interface='wlan0'
HostAPDIP='10.0.0.1'
echo "-----------------------------------"
echo "Checking connectivity of $Interface"
NetworkUp=`/sbin/ifconfig $Interface`
IP=`echo "$NetworkUp" | grep inet | wc -l`
if [[ $IP -eq 0 ]]; then
echo "Connection is down"

 
 

hostapd=`pidof hostapd`
if [[ -z $hostapd ]]; then
# If there are any more actions required when the interface goes down, add them here
echo "Attempting to start hostapd"
/etc/init.d/hostapd start
echo "Attempting to start dnsmasq"
/etc/init.d/dnsmasq start
echo "Setting IP Address for wlan0"
/sbin/ifconfig wlan0 $HostAPDIP netmask 255.255.255.0 up
fi
elif [[ $IP -eq 1 && $NetworkUp =~ $HostAPDIP ]]; then
echo "IP is $HostAPDIP - hostapd is running"
else
echo "Connection is up"
hostapd=`pidof hostapd`
if [[ ! -z $hostapd ]]; then
echo "Attempting to stop hostapd"
/etc/init.d/hostapd stop
echo "Attempting to stop dnsmasq"
/etc/init.d/dnsmasq stop
echo "Renewing IP Address for $Interface"
/sbin/dhclient wlan0
fi
fi
echo "-----------------------------------"

#
#Wifi config - if no prefered Wifi generate a hotspot

#enter required ssids: ssids=('ssid1' 'ssid2')
#CurrentSsid = $(bash /home/pi/installer/SensorPlatform/includedFiles/GetCurrentSSID.sh)
#ssids=('NEVERHITSTHISPROABBLY' '$CurrentSsid')
#echo $CurrentSsid


#Main script
#createAdHocNetwork()
#{
#    ip link set dev wlan0 down
#    ip a add 10.0.0.5/24 dev wlan0
#    ip link set dev wlan0 up
#    service dnsmasq start
#    service hostapd start
#}

#connected=false

#for ssid in "${ssids[@]}"
#do
#    if iw dev wlan0 scan ap-force | grep $ssid > /dev/null
#    then
#        wpa_supplicant -B -i wlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null 2>&1
#        if dhclient -1 wlan0
#        then
#            connected=true
#            break
#        else
#            wpa_cli terminate
#            break
#        fi
#    fi

#done

#if ! $connected; then
#    createAdHocNetwork
#fi

